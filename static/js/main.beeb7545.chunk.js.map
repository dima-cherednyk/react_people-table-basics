{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","api.ts","components/PersonalLink/PersonalLink.tsx","components/List/List.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","classNames","MainNav","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonalLink","person","slug","sex","name","List","people","selectedPerson","length","map","born","died","mother","motherName","father","fatherName","Loader","PeopleTable","isLoading","updatePeople","loadPeople","find","PeoplePage","useState","setPeople","hasError","setHasError","setIsLoading","useParams","useEffect","loadData","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.beeb7545.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonalLink: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      {person.slug\n        ? (\n          <Link\n            className={classNames({ 'has-text-danger': person.sex === 'f' })}\n            to={`/people/${person.slug}`}\n          >\n            {person.name}\n          </Link>\n        )\n        : person.name}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonalLink } from '../PersonalLink/PersonalLink';\n\ntype Props = {\n  people: Person[] | null;\n  selectedPerson: string;\n};\n\nexport const List: React.FC<Props> = (\n  {\n    people,\n    selectedPerson,\n  },\n) => {\n  if (!people) {\n    return null;\n  }\n\n  return (\n    <>\n      {people.length === 0\n        ? <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n        : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <tr\n                  data-cy=\"person\"\n                  key={person.name}\n                  className={classNames({\n                    'has-background-warning': person.slug === selectedPerson,\n                  })}\n                >\n                  <td>\n                    <PersonalLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {\n                      (person.mother\n                        ? (\n                          <Link className=\"has-text-danger\" to={`/people/${person.mother.slug}`}>\n                            {person.motherName}\n                          </Link>\n                        )\n                        : person.motherName) || '-'\n                    }\n                  </td>\n                  <td>\n                    {\n                      (person.father\n                        ? (\n                          <Link to={`/people/${person.father.slug}`}>\n                            {person.fatherName}\n                          </Link>\n                        )\n                        : person.fatherName) || '-'\n                    }\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../../types';\nimport { List } from '../List/List';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  people: Person[] | null;\n  selectedPerson: string;\n  isLoading: boolean;\n};\n\nexport const PeopleTable: React.FC<Props> = (\n  {\n    people,\n    selectedPerson = '',\n    isLoading,\n  },\n) => {\n  return (\n    <>\n      {isLoading\n        ? <Loader />\n        : (\n          <List\n            people={people}\n            selectedPerson={selectedPerson}\n          />\n        )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nconst updatePeople = (loadPeople: Person[]) => {\n  const updatedPeople = loadPeople.map(person => {\n    return {\n      ...person,\n      mother:\n        loadPeople.find(mother => mother.name === person.motherName),\n      father:\n        loadPeople.find(father => father.name === person.fatherName),\n    };\n  });\n\n  return updatedPeople;\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const loadData = async () => {\n      try {\n        const loadPeople = await getPeople();\n\n        setPeople(updatePeople(loadPeople));\n        setIsLoading(false);\n      } catch {\n        setHasError(true);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {hasError\n            ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )\n            : (\n              <PeopleTable\n                people={people}\n                selectedPerson={slug}\n                isLoading={isLoading}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { MainNav } from './components/MainNav/MainNav';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n            <Route\n              path=\"/home\"\n              element={\n                <Navigate to=\"/\" replace />\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}